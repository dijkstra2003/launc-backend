language: csharp
solution: API.sln
os: linux

group: travis_latest

mono: none
dotnet: 3.0

branches:
  only:
  - master
  - release
  - dev

install:
  - dotnet restore src/API.Web/API.Web.csproj
  - dotnet tool install --global dotnet-sonarscanner

script:
  - dotnet test
  - dotnet sonarscanner /k:launc-backend /d:sonar.host.url=dev.launc.space:9000 
    /d:sonar.cs.opencover.reportsPaths=launc-backend.Test/coverage.opencover.xml 
    /d:sonar.coverage.exclusions=”**Test*.cs”

addons:
  ssh_known_hosts:
  - launc.space
  - dev.launc.space

before_deploy:
  - openssl aes-256-cbc -K $encrypted_eab098d70a4e_key -iv $encrypted_eab098d70a4e_iv -in deploy_rsa.enc -out /tmp/deploy_rsa -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/deploy_rsa
  - ssh-add /tmp/deploy_rsa

deploy:
  - provider: script
    skip_cleanup: true
    script: bash scripts/deploy.sh accept \
            && ssh -t launc@dev.launc.space "bash docker/deploy_accept.sh"
    on:
      branch: master
  - provider: script
    skip_cleanup: true
    script: bash scripts/deploy.sh release \
            && ssh -t launc@launc.space "bash docker/deploy_prod.sh"
    on:
      branch: release
